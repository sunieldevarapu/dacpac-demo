name: Run ServiceNow CTASK (PowerShell)

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 3 * * *'  # Daily at 3 AM UTC

jobs:
  run-script:
    runs-on: windows-latest

    steps:
      - name: Run CTASK Simulation in PowerShell
        shell: pwsh
        run: |
          $centralTime = [System.TimeZoneInfo]::FindSystemTimeZoneById("Central Standard Time")
          function Print-Timestamped($message) {
            $now = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $centralTime)
            Write-Output "$message $($now.ToString('yyyy-MM-dd HH:mm')) CST"
            Write-Output "--------------------"
          }

          $unassignedTasks = @(
            @{ id = "CTASK001"; description = "Update deployment pipeline" },
            @{ id = "CTASK002"; description = "Review change request" }
          )

          $assignedTasks = @(
            @{ id = "CTASK003"; description = "Deploy to staging" },
            @{ id = "CTASK004"; description = "Deploy to production" }
          )

          $queuedDeployments = @(
            @{ id = "DEPLOY001"; project = "Project A" },
            @{ id = "DEPLOY002"; project = "Project B" }
          )

          function Unassign-Tasks {
            Print-Timestamped "PROCESS STARTED"
            Write-Output "ENVIRONMENT: development"
            Write-Output "Unassigning tasks assigned to AUTOOCTOPUS..."
            foreach ($task in $assignedTasks) {
              Write-Output "Unassigned task: $($task.id) - $($task.description)"
            }
            Print-Timestamped "UNASSIGN"
          }

          function Schedule-Tasks {
            Write-Output "Getting unassigned tasks..."
            foreach ($task in $unassignedTasks) {
              Write-Output "Unassigned task: $($task.id) - $($task.description)"
            }
            Print-Timestamped "GET TASKS"
            if ($unassignedTasks.Count -gt 0) {
              Write-Output "Scheduling tasks..."
              foreach ($task in $unassignedTasks) {
                Write-Output "Scheduled task: $($task.id) - $($task.description)"
              }
              Print-Timestamped "SCHEDULE"
            }
          }

          function Authorize-Deployments {
            Write-Output "Getting queued deployments..."
            foreach ($deploy in $queuedDeployments) {
              Write-Output "Queued deployment: $($deploy.id) - $($deploy.project)"
            }
            Print-Timestamped "GET QUEUED DEPLOYMENTS"

            Write-Output "Getting assigned tasks..."
            foreach ($task in $assignedTasks) {
              Write-Output "Assigned task: $($task.id) - $($task.description)"
            }
            Print-Timestamped "GET ASSIGNED TASKS"

            Write-Output "Authorizing deployments..."
            foreach ($deploy in $queuedDeployments) {
              Write-Output "Authorized deployment: $($deploy.id) for project $($deploy.project)"
            }
            Print-Timestamped "AUTHORIZE DEPLOYMENTS"
            Print-Timestamped "PROCESS FINISHED"
          }

          # Execute the workflow
          Unassign-Tasks
          Schedule-Tasks
          Authorize-Deployments
