name: dacpac-ci-remote

on:
  workflow_dispatch:
    inputs:
      remote_repo:
        description: Remote repository (owner/repo) to checkout
        required: true
        type: string
      dacpac_solution_dir:
        description: Project directories (comma-separated, relative to remote repo)
        default: 'Project1,Project2'
        required: true
        type: string
      remote_branch:
        description: Branch of the remote repository to checkout
        default: main
        required: false
        type: string

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  prepare-matrix:
    runs-on: windows-latest
    outputs:
      directories: ${{ steps.set-matrix.outputs.directories }}
    steps:
      - name: Set Project Directories
        id: set-matrix
        run: |
          $dirs = "${{ inputs.dacpac_solution_dir }}" -split ',' | ForEach-Object { $_.Trim() } | Where-Object { $_ -ne '' }
          $json = ConvertTo-Json -InputObject @($dirs) -Compress
          echo "directories=$json" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        shell: pwsh

  build-and-pack:
    needs: prepare-matrix
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.prepare-matrix.outputs.directories) }}
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: Checkout Remote Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.remote_repo }}
          ref: ${{ inputs.remote_branch }}

      - name: Install Octopus CLI
        run: choco install octopusdeploy-cli
        shell: pwsh

      - name: Create Artifacts Directory
        run: New-Item -ItemType Directory -Path artifacts -Force
        shell: pwsh

      - name: Octo Pack
        run: |
          $directory = "${{ matrix.directory }}"
          echo "Packing project: $directory"
          octo pack --id="$directory-SQL" --version="1.0.${{ github.run_number }}" --outFolder="artifacts" --basePath="$env:GITHUB_WORKSPACE\$directory" --format=zip
        shell: pwsh

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.directory }}-SQL
          path: artifacts/*.zip
