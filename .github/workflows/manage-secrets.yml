name: Manage GitHub Secrets

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read
  actions: write

jobs:
  check-and-update-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Check and Renew Secrets
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          REPO="owner/repository"  # Update with your GitHub repo
          SECRETS_TO_MANAGE=("SECRET_KEY" "API_TOKEN") # List of secrets to manage

          for SECRET in "${SECRETS_TO_MANAGE[@]}"; do
            EXISTING_SECRET=$(gh api repos/$REPO/actions/secrets/$SECRET --jq '.created_at' || echo "NOT_FOUND")

            if [[ "$EXISTING_SECRET" == "NOT_FOUND" ]]; then
              echo "Secret $SECRET not found. Creating a new one..."
              NEW_VALUE=$(openssl rand -hex 32) # Generate a new secret
              gh api --method PUT repos/$REPO/actions/secrets/$SECRET --field encrypted_value="$NEW_VALUE" --field key_id="$(gh api repos/$REPO/actions/secrets/public-key --jq '.key_id')"
              echo "Secret $SECRET created successfully."
            else
              echo "Secret $SECRET exists. Checking expiration..."
              # Add your logic to determine expiration (e.g., store the date in a separate place)
              EXPIRATION_DATE=$(date -d "$EXISTING_SECRET +30 days" +%s)
              CURRENT_DATE=$(date +%s)

              if [[ $CURRENT_DATE -ge $EXPIRATION_DATE ]]; then
                echo "Secret $SECRET is expired. Renewing..."
                NEW_VALUE=$(openssl rand -hex 32)
                gh api --method PUT repos/$REPO/actions/secrets/$SECRET --field encrypted_value="$NEW_VALUE" --field key_id="$(gh api repos/$REPO/actions/secrets/public-key --jq '.key_id')"
                echo "Secret $SECRET renewed successfully."
              else
                echo "Secret $SECRET is still valid."
              fi
            fi
          done
