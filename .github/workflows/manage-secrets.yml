name: Manage GitHub Secrets

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read
  actions: write

jobs:
  check-and-update-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Check and Renew Secrets
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          REPO="owner/repository"  # Update with your GitHub repo
          SECRETS_TO_MANAGE=("GH_TOKEN" "API_TOKEN") # List of secrets to manage

          for SECRET in "${SECRETS_TO_MANAGE[@]}"; do
            EXISTING_SECRET=$(gh api repos/$REPO/actions/secrets/$SECRET --jq '.created_at' 2>/dev/null || echo "NOT_FOUND")

            if [[ "$EXISTING_SECRET" == "NOT_FOUND" ]]; then
              echo "Secret $SECRET not found. Creating a new one..."
              NEW_VALUE=$(openssl rand -hex 32)
              PUBLIC_KEY_RESPONSE=$(gh api repos/$REPO/actions/secrets/public-key)
              PUBLIC_KEY=$(echo "$PUBLIC_KEY_RESPONSE" | jq -r '.key')
              KEY_ID=$(echo "$PUBLIC_KEY_RESPONSE" | jq -r '.key_id')
            
              gh api --method PUT repos/$REPO/actions/secrets/$SECRET \
                --field encrypted_value="$NEW_VALUE" \
                --field key_id="$KEY_ID"
            
              echo "Secret $SECRET created successfully."
              exit 0
            fi

          done
